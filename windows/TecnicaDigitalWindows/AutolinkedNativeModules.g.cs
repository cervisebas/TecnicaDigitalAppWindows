// AutolinkedNativeModules.g.cs contents generated by "react-native autolink-windows"

using System.Collections.Generic;

// Namespaces from @react-native-async-storage/async-storage
using ReactNativeAsyncStorage;

// Namespaces from @react-native-community/checkbox
using CheckboxWindows;

// Namespaces from @react-native-community/datetimepicker
using DateTimePicker;

// Namespaces from @react-native-community/progress-view
using progress_view;

// Namespaces from @react-native-community/slider
using SliderWindows;

// Namespaces from @react-native-picker/picker
using ReactNativePicker;

// Namespaces from react-native-device-info
using RNDeviceInfoCPP;

// Namespaces from react-native-linear-gradient
using BVLinearGradient;

// Namespaces from react-native-screens
using RNScreens;

namespace Microsoft.ReactNative.Managed
{
    internal static class AutolinkedNativeModules
    {
        internal static void RegisterAutolinkedNativeModulePackages(IList<IReactPackageProvider> packageProviders)
        { 
            // IReactPackageProviders from @react-native-async-storage/async-storage
            packageProviders.Add(new ReactNativeAsyncStorage.ReactPackageProvider());
            // IReactPackageProviders from @react-native-community/checkbox
            packageProviders.Add(new CheckboxWindows.ReactPackageProvider());
            // IReactPackageProviders from @react-native-community/datetimepicker
            packageProviders.Add(new DateTimePicker.ReactPackageProvider());
            // IReactPackageProviders from @react-native-community/progress-view
            packageProviders.Add(new progress_view.ReactPackageProvider());
            // IReactPackageProviders from @react-native-community/slider
            packageProviders.Add(new SliderWindows.ReactPackageProvider());
            // IReactPackageProviders from @react-native-picker/picker
            packageProviders.Add(new ReactNativePicker.ReactPackageProvider());
            // IReactPackageProviders from react-native-device-info
            packageProviders.Add(new RNDeviceInfoCPP.ReactPackageProvider());
            // IReactPackageProviders from react-native-linear-gradient
            packageProviders.Add(new BVLinearGradient.ReactPackageProvider());
            // IReactPackageProviders from react-native-screens
            packageProviders.Add(new RNScreens.ReactPackageProvider());
        }
    }
}
